
# Buffer and size constants
BUFFER_SIZE = 1024
CLIENT_ID_SIZE = 16
CLIENT_VERSION_SIZE = 1
SERVER_VERSION_SIZE = 1
CODE_SIZE = 2
PAYLOAD_SIZE = 4
CLIENT_NAME_SIZE = 255

# Request/response codes
REGISTER_CODE = 825
LOGIN_CODE = 827
SEND_FILE_CODE = 828
SEND_KEY_CODE = 826
VALID_CRC_CODE = 900
INVALID_CRC_CODE = 901
INVALID_CRC_FINAL_CODE = 902  # Invalid CRC, client won't try sending again
REGISTER_SUCCESS_CODE = 1600
REGISTER_FAILED_CODE = 1601
RECEIVED_KEY_SUCCESS_CODE = 1602
RECEIVED_FILE_SUCCESS_CODE = 1603
SERVER_ACK_CODE = 1604
LOGIN_SUCCESS_CODE = 1605
LOGIN_FAIL_CODE = 1606
GENERAL_FAIL_CODE = 1607

# Request header definitions
REQUEST_HEADER_SIZE = CLIENT_ID_SIZE + CLIENT_VERSION_SIZE + CODE_SIZE + PAYLOAD_SIZE
REQUEST_HEADER_FORMAT = '<16sBHI'  # Format for request header

# Structures for specific requests
SEND_KEY_REQUEST_FORMAT = '<255s160s'  # Structure for sending a key
SEND_FILE_REQUEST_FORMAT = '<IIHH255s'  # Structure for sending a file


# Key and AES definitions
KEY_SIZE = 160
AES_KEY_SIZE = 32
SEND_KEY_PAYLOAD_SIZE = CLIENT_NAME_SIZE + KEY_SIZE  # Size for sending a key payload

# File sending definitions
CONTENT_SIZE = 4
ORIG_FILE_SIZE = 4
PACKET_NUMBER_SIZE = 2
TOTAL_PACKETS_SIZE = 2
FILE_NAME_SIZE = 255
FILE_PAYLOAD_SIZE_WITHOUT_DATA = (
    CONTENT_SIZE + ORIG_FILE_SIZE + PACKET_NUMBER_SIZE +
    TOTAL_PACKETS_SIZE + FILE_NAME_SIZE
)
# Server constants
SERVER_VERSION = 3
CLIENT_FOLDERS_NAME = "client_folders"